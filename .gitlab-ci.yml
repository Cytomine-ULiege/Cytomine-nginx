stages:
  - prepare
  - build
  - publish


variables:
  DOCKER_IMAGE_NAME: 'cytomine/nginx'
  NGINX_VERSION: '1.22.1'

default:
  tags:
    - docker

make-version-name:
  stage: prepare
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/bash:5.2.15-alpine3.16
  script:
    # The
    - | # If no tag has been pushed ($CI_COMMIT_TAG is empty), name it as the branch
      if [ -z $CI_COMMIT_TAG ]; then
        echo "IMAGE_VERSION=$CI_COMMIT_BRANCH" > .env
      else
        # Else use the tag
        echo "IMAGE_VERSION=$CI_COMMIT_TAG" > .env
      fi
    - cat .env
  artifacts:
    reports:
      dotenv: .env


build-push-docker-image:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:latest
  needs:
    - job: make-version-name
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Log in to Gitlab docker registry"
    - mkdir -p ~/.docker
    - echo ${DOCKER_AUTH_CONFIG} > ~/.docker/config.json

    - echo "Build the docker image ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION}"
    - docker build --build-arg NGINX_VERSION=${NGINX_VERSION} --build-arg IMAGE_REVISION=${CI_COMMIT_SHORT_SHA} -t ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION} -f Dockerfile .

    - echo "Pushing docker image ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION}"
    - docker push ${DOCKER_IMAGE_NAME}:${CM_VERSION}
    - echo "Successfully pushed docker image ${DOCKER_IMAGE_NAME}:${CM_VERSION}"
